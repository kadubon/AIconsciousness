from typing import List
from langchain_core.messages import AnyMessage
from pydantic.v1 import BaseModel, Field

class AgentState(BaseModel):
    """
    Represents the state of our cognitive agent. This is the central "workspace"
    for all cognitive processes, inspired by the Global Workspace Theory.
    """
    
    # The history of the conversation
    messages: List[AnyMessage] = Field(default_factory=list)
    
    # The current high-level task or input from the user.
    input: str = ""
    
    # The execution plan generated by the agent's reasoning process.
    plan: str = ""
    
    # A list to hold the outputs of any tools the agent uses.
    tool_outputs: List[AnyMessage] = Field(default_factory=list)
    
    # Information retrieved from the agent's long-term memory.
    retrieved_memories: str = ""
    
    # A counter to control loops and prevent infinite execution.
    iterations: int = 0